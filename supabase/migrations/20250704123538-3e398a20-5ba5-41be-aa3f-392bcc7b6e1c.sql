
-- Create profiles table to store user birth year
CREATE TABLE public.profiles (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id uuid REFERENCES auth.users NOT NULL,
  birth_year bigint,
  created_at timestamp with time zone NOT NULL DEFAULT now()
);

-- Enable RLS on profiles table
ALTER TABLE public.profiles ENABLE ROW LEVEL SECURITY;

-- Create policy for profiles - users can only access their own profile
CREATE POLICY "Users can manage their own profile" ON public.profiles
  FOR ALL USING (auth.uid() = user_id)
  WITH CHECK (auth.uid() = user_id);

-- Create journal_entries table
CREATE TABLE public.journal_entries (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id uuid REFERENCES auth.users,
  entry_text text,
  date date,
  created_at timestamp with time zone NOT NULL DEFAULT now()
);

-- Enable RLS on journal_entries table
ALTER TABLE public.journal_entries ENABLE ROW LEVEL SECURITY;

-- Create policies for journal entries
CREATE POLICY "Allow read for authenticated users" ON public.journal_entries
  FOR SELECT USING (auth.uid() = user_id);

CREATE POLICY "Allow insert for authenticated users" ON public.journal_entries
  FOR INSERT WITH CHECK (auth.uid() = user_id);
